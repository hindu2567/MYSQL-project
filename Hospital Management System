DROP DATABASE IF EXISTS hospital_management;
CREATE DATABASE IF NOT EXISTS hospital_management;
USE hospital_management;

DROP TABLE IF EXISTS patient;
CREATE TABLE IF NOT EXISTS patient (
    email VARCHAR(50) PRIMARY KEY,
    password VARCHAR(30) NOT NULL,
    name VARCHAR(50) NOT NULL,
    address VARCHAR(60) NOT NULL,
    gender VARCHAR(20) NOT NULL
);

DROP TABLE IF EXISTS medical_history;
CREATE TABLE IF NOT EXISTS medical_history (
    medical_history_id INT AUTO_INCREMENT PRIMARY KEY,
    date DATE NOT NULL,
    conditions VARCHAR(100) NOT NULL,
    surgeries VARCHAR(100) NOT NULL,
    medication VARCHAR(100) NOT NULL
);

DROP TABLE IF EXISTS doctor;
CREATE TABLE IF NOT EXISTS doctor (
    email VARCHAR(50) PRIMARY KEY,
    gender VARCHAR(20) NOT NULL,
    password VARCHAR(30) NOT NULL,
    name VARCHAR(50) NOT NULL
);

DROP TABLE IF EXISTS appointment;
CREATE TABLE IF NOT EXISTS appointment (
    appointment_id INT AUTO_INCREMENT PRIMARY KEY,
    date DATE NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    status VARCHAR(15) NOT NULL
);

DROP TABLE IF EXISTS patient_visits;
CREATE TABLE IF NOT EXISTS patient_visits (
    patient VARCHAR(50) NOT NULL,
    appt INT NOT NULL,
    concerns VARCHAR(40) NOT NULL,
    symptoms VARCHAR(40) NOT NULL,
    FOREIGN KEY (patient) REFERENCES patient(email) ON DELETE CASCADE,
    FOREIGN KEY (appt) REFERENCES appointment(appointment_id) ON DELETE CASCADE,
    PRIMARY KEY (patient, appt)
);

DROP TABLE IF EXISTS schedule;
CREATE TABLE IF NOT EXISTS schedule (
    schedule_id INT AUTO_INCREMENT UNIQUE,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    break_time TIME NOT NULL,
    day VARCHAR(20) NOT NULL,
    PRIMARY KEY (schedule_id, start_time, end_time, break_time, day)
);

DROP TABLE IF EXISTS patients_history;
CREATE TABLE IF NOT EXISTS patients_history (
    patient VARCHAR(50) NOT NULL,
    history INT AUTO_INCREMENT PRIMARY KEY,
    FOREIGN KEY (patient) REFERENCES patient(email) ON DELETE CASCADE,
    FOREIGN KEY (history) REFERENCES medical_history(medical_history_id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS diagnose;
CREATE TABLE IF NOT EXISTS diagnose (
    appt INT NOT NULL,
    doctor VARCHAR(50) NOT NULL,
    diagnosis VARCHAR(40) NOT NULL,
    prescription VARCHAR(50) NOT NULL,
    FOREIGN KEY (appt) REFERENCES appointment(appointment_id) ON DELETE CASCADE,
    FOREIGN KEY (doctor) REFERENCES doctor(email) ON DELETE CASCADE,
    PRIMARY KEY (appt, doctor)
);

DROP TABLE IF EXISTS doctor_schedules;
CREATE TABLE IF NOT EXISTS doctor_schedules (
    sched INT NOT NULL,
    doctor VARCHAR(50) NOT NULL,
    FOREIGN KEY (sched) REFERENCES schedule(schedule_id) ON DELETE CASCADE,
    FOREIGN KEY (doctor) REFERENCES doctor(email) ON DELETE CASCADE,
    PRIMARY KEY (sched, doctor)
);

DROP TABLE IF EXISTS doctor_view_history;
CREATE TABLE IF NOT EXISTS doctor_view_history (
    history INT NOT NULL,
    doctor VARCHAR(50) NOT NULL,
    FOREIGN KEY (doctor) REFERENCES doctor(email) ON DELETE CASCADE,
    FOREIGN KEY (history) REFERENCES medical_history(medical_history_id) ON DELETE CASCADE,
    PRIMARY KEY (history, doctor)
);
